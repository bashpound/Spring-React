{"version":3,"sources":["assets/logo_dark.svg","assets/logo_dark_h.svg","comp/UI/NavigationDrawer.tsx","comp/Banner.jsx","utils/eventBus.js","comp/Header.jsx","utils/error-parser.js","services/authentication.js","utils/history.js","views/Login.tsx","utils/regex.js","services/RegistrationService.js","views/MemberRegister.jsx","comp/Footer.jsx","test/Counter.jsx","modules/counter.js","containers/CounterContainer.jsx","test/Todos.jsx","modules/todos.js","containers/TodosContainer.jsx","test/IntroRedux.jsx","views/Main.jsx","App.js","serviceWorker.js","modules/header-footer.js","modules/index.js","index.js","assets/logo_white_h.svg"],"names":["module","exports","NavigationDrawer","state","autoFocus","canEscapeKeyClose","canOutsideClickClose","enforceFocus","hasBackdrop","isOpen","position","Position","LEFT","size","Drawer","SIZE_SMALL","usePortal","handleOpen","setState","handleClose","icon","onClick","this","onClose","title","className","Classes","DRAWER_BODY","DIALOG_BODY","DRAWER_FOOTER","React","PureComponent","banner","main","sub","id","eventBus","on","event","callback","document","addEventListener","e","detail","dispatch","data","dispatchEvent","CustomEvent","remove","removeEventListener","Header","props","headerOn","href","src","require","alt","type","to","Banner","message","Component","error","response","status","Error","request","_","isError","Promise","resolve","reject","axios","post","then","console","log","catch","errorParser","history","createBrowserHistory","Login","username","password","showPassword","disabled","handleAuthenticate","f","FormData","append","AuthenticationService","alert","push","componentDidMount","componentWillUnmount","SubmitPreventer","length","handleLockClick","lockButton","content","intent","Intent","WARNING","minimal","placeholder","onChange","target","value","rightElement","large","emailRegex","RegExp","usernameRegex","passwordRegex","MemberRegister","IntentParser","DANGER","SUCCESS","NONE","isUsernameValid","isPasswordValid","isPassword2Valid","isEmailAddressValid","handleRegister","emailAddress","RegistrationService","password2","name","test","Footer","footerOn","Counter","number","onIncrease","onDecrease","INCREASE","DECREASE","counter","connect","increase","decrease","TodoItem","todo","onToggle","onRemove","checked","done","readOnly","style","textDecoration","text","Todos","input","todos","onChangeInput","onInsert","onSubmit","preventDefault","map","key","INSERT","TOGGLE","REMOVE","changeInput","insert","toggle","width","height","textAlign","margin","padding","IntroRedux","onChangeImages","file","files","thumbImage","thumbUrl","URL","createObjectURL","productName","stock","price","category","defaultValue","App","path","component","exact","Main","Boolean","window","location","hostname","match","HEADER","FOOTER","header","footer","initialState","headerFooter","action","rootReducer","combineReducers","HeaderFooter","store","createStore","composeWithDevTools","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cb08e9bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_dark.474dddc4.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_dark_h.bcfff61e.svg\";","import React from \"react\"\r\n\r\nimport {\r\n    Button,\r\n    Classes,\r\n    Drawer,\r\n    Position\r\n} from \"@blueprintjs/core\"\r\n\r\nexport interface DrawerState {\r\n    autoFocus: boolean;\r\n    canEscapeKeyClose: boolean;\r\n    canOutsideClickClose: boolean;\r\n    enforceFocus: boolean;\r\n    hasBackdrop: boolean;\r\n    isOpen: boolean;\r\n    position?: Position;\r\n    size: string;\r\n    usePortal: boolean;\r\n}\r\nexport default class NavigationDrawer extends React.PureComponent<DrawerState> {\r\n    public state: DrawerState = {\r\n        autoFocus: true,\r\n        canEscapeKeyClose: true,\r\n        canOutsideClickClose: true,\r\n        enforceFocus: true,\r\n        hasBackdrop: true,\r\n        isOpen: false,\r\n        position: Position.LEFT,\r\n        size: Drawer.SIZE_SMALL,\r\n        usePortal: true,\r\n    }\r\n\r\n    public render() {\r\n        return (\r\n            <>  \r\n                <Button icon=\"list\" onClick={this.handleOpen} />\r\n                <Drawer\r\n                    icon=\"user\"\r\n                    onClose={this.handleClose}\r\n                    title=\"로그인 하세요\"\r\n                    {...this.state}\r\n                >\r\n                    <div className={Classes.DRAWER_BODY}>\r\n                        <div className={Classes.DIALOG_BODY}>\r\n                            <p>\r\n                                <strong>\r\n                                    카테고리\r\n                                </strong>\r\n                            </p>\r\n                            <p>\r\n                                내용\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className={Classes.DRAWER_FOOTER}>Footer</div>\r\n                </Drawer>\r\n            </>\r\n        )\r\n    }\r\n\r\n    private handleOpen = () => this.setState({ isOpen: true })\r\n    private handleClose = () => this.setState({ isOpen: false })\r\n}","import React from 'react'\r\n\r\n\r\n\r\nconst banner = ({main, sub}) => {\r\n    return (\r\n        <div id=\"banner\">\r\n            <div>{main}</div>\r\n            <h4>{sub}</h4>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default banner","const eventBus = {\r\n    on(event, callback) {\r\n      document.addEventListener(event, (e) => callback(e.detail))\r\n    },\r\n    dispatch(event, data) {\r\n      document.dispatchEvent(new CustomEvent(event, { detail: data }))\r\n    },\r\n    remove(event, callback) {\r\n      document.removeEventListener(event, callback)\r\n    }\r\n  }\r\n  \r\n  export default eventBus","import React from 'react'\r\nimport NavigationDrawer from './UI/NavigationDrawer'\r\nimport '../css/header.scss'\r\nimport { Link } from 'react-router-dom'\r\nimport Banner from './Banner'\r\nimport eventBus from '../utils/eventBus'\r\n\r\nclass Header extends React.Component {\r\n\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      headerOn: true\r\n    }\r\n}\r\n\r\n  render() {\r\n    const {headerOn} = this.state\r\n\r\n    return (\r\n        <header id=\"header\" className={headerOn? 'headerfooter-on': 'headerfooter-off'}>\r\n          <div id=\"upper-bar\">\r\n            <div id=\"drawer\">\r\n              <NavigationDrawer />\r\n            </div>\r\n            <a href=\"/\">\r\n              <img id=\"banner\" src={require('../assets/logo_dark.svg')} alt=\"Logo\" className=\"Logo\" />\r\n            </a>\r\n            <input className=\"search-bar\" type=\"text\"></input>\r\n            <nav className=\"upper-bar-right\">\r\n              <ul id=\"nav-menu-container\">\r\n                <li>\r\n                  <Link to=\"/login\">\r\n                    <Banner main=\"Hello, Sign in\" sub=\"Accounts & Lists\" />\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/\">\r\n                    <Banner main=\"Returns\" sub=\"& Orders\" />\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a href=\"/\">\r\n                    <Banner main=\"Cart\" />\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <div id=\"under-bar\">\r\n            <div className=\"under-banner\">\r\n               <Link to=\"/\"><Banner sub=\"Delivery to: Somewhere!\"/></Link> \r\n            </div>\r\n            <div className=\"under-banner\">\r\n               <Link to=\"/\"><Banner main=\"Today's Deals\" /></Link> \r\n            </div>\r\n            <div className=\"under-banner\">\r\n            <Link to=\"/\"><Banner main=\"Customer Service\" /></Link> \r\n            </div>\r\n            <div className=\"under-banner\">\r\n            <Link to=\"/\"><Banner main=\"Sell\" /></Link> \r\n            </div>\r\n              <h3 className=\"under-banner covid\">Our Response to COVID-19</h3>\r\n          </div>\r\n        </header>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    eventBus.on(\"headerFooter\", (data) =>\r\n      this.setState({ headerOn: data.message })\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import _ from 'lodash'\r\n\r\nexport default {\r\n  parse (error) {\r\n    if (error.response) {\r\n      const status = error.response.status\r\n      const data = error.response.data\r\n      if (status === 400) {\r\n        if (data && data.message) {\r\n          return new Error(data.message)\r\n        } else {\r\n          return new Error('Bad request')\r\n        }\r\n      } else if (status === 401) {\r\n        return new Error('Request not authorized.')\r\n      } else if (status === 403) {\r\n        return new Error('Request forbidden.')\r\n      } else if (status === 404) {\r\n        return new Error('Request failed. Request endpoint not found on the server.')\r\n      } else if (status === 500) {\r\n        if (data && data.message) {\r\n          return new Error(data.message + ' Please try again later.')\r\n        } else {\r\n          return new Error('There is an error on the server side. Please try again later.')\r\n        }\r\n      } else {\r\n        return new Error('Request failed. Please try again later.')\r\n      }\r\n    } else if (error.request) {\r\n      // Request was made and no response\r\n      return new Error('Request failed. No response from the server.')\r\n    } else {\r\n      return _.isError(error) ? error : new Error(error)\r\n    }\r\n  }\r\n}\r\n","import axios from 'axios'\r\nimport errorParser from '../utils/error-parser'\r\nimport eventBus from '../utils/eventBus'\r\n\r\nexport default {\r\n  /**\r\n   * Authenticate a login request\r\n   * @param {Object} detail login detail\r\n   */\r\n  authenticate (detail) {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/api/login', detail).then(({ data }) => {\r\n        resolve(data)\r\n        console.log(data)\r\n      }).catch((error) => {\r\n        reject(errorParser.parse(error))\r\n      })\r\n    })\r\n  },\r\n\r\n  fetchuser () {\r\n    return new Promise((resolve, reject) => {\r\n      axios.get('/user').then(({ data }) => {\r\n        resolve(data)\r\n        eventBus.$emit('myDataFetched', data)\r\n        console.log(data)\r\n      }).catch((error) => {\r\n        reject(errorParser.parse(error))\r\n      })\r\n    })\r\n  },\r\n\r\n  afterLogin () {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/loginReg').then(({ data }) => {\r\n        resolve(data)\r\n      }).catch((error) => {\r\n        reject(errorParser.parse(error))\r\n      })\r\n    })\r\n  },\r\n\r\n  beforeLogOut () {\r\n    return new Promise((resolve, reject) => {\r\n      axios.put('/logOutReg').then(({ data }) => {\r\n        resolve(data)\r\n      }).catch((error) => {\r\n        reject(errorParser.parse(error))\r\n      })\r\n    })\r\n  },\r\n\r\n  logOut () {\r\n    return new Promise((resolve, reject) => {\r\n      axios.post('/logout').then(({ data }) => {\r\n        resolve(data)\r\n        eventBus.$emit('logout', data)\r\n        console.log(data)\r\n      }).catch((error) => {\r\n        reject(errorParser.parse(error))\r\n      })\r\n    })\r\n  }\r\n}\r\n","import {createBrowserHistory} from 'history'\r\n\r\nconst history = createBrowserHistory()\r\n\r\nexport default history","import React from 'react'\r\nimport {FormGroup, Label, InputGroup,  Button, Tooltip, Intent} from \"@blueprintjs/core\"\r\nimport {Link} from 'react-router-dom'\r\nimport '../css/form.scss'\r\nimport eventBus from '../utils/eventBus'\r\nimport AuthenticationService from '../services/authentication'\r\nimport history from '../utils/history'\r\n\r\ninterface LoginGroupState {\r\n  username: string;\r\n  password: string;\r\n  showPassword: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\n\r\nclass Login extends React.PureComponent<LoginGroupState> {\r\n    public state: LoginGroupState = {\r\n      username: '',\r\n      password: '',\r\n      showPassword: false,\r\n      disabled: false\r\n    }\r\n    render() {\r\n\r\n      const { showPassword, disabled } = this.state;\r\n\r\n      const lockButton =  (\r\n        <Tooltip content={`${showPassword ? \"Hide\" : \"Show\"} Password`} disabled={disabled}>\r\n            <Button\r\n                disabled={disabled}\r\n                icon={showPassword ? \"unlock\" : \"lock\"}\r\n                intent={Intent.WARNING}\r\n                minimal={true}\r\n                onClick={this.handleLockClick}\r\n            />\r\n        </Tooltip>\r\n    )\r\n      return (\r\n        \r\n        <section className=\"login-register\">\r\n          <div id=\"logo\">\r\n              <Link to=\"/\"><img src={require('../assets/logo_white_h.svg')} alt=\"Logo\"/></Link>\r\n          </div>\r\n          <FormGroup>\r\n          <div className=\"bp3-card\">\r\n              <h1>로그인</h1>\r\n              <Label className=\"input-wrapper\">\r\n                  <strong>아이디 or Email</strong>\r\n                  <InputGroup placeholder=\"아이디 or Email을 입력하세요.\"\r\n                  onChange={ (e: React.ChangeEvent<HTMLInputElement>)  => this.setState({ username: e.target.value})} />\r\n              </Label>\r\n              <Label className=\"input-wrapper\">\r\n              <strong>비밀번호</strong>\r\n                  <InputGroup\r\n                    disabled={disabled}\r\n                    placeholder=\"비밀번호를 입력하세요.\"\r\n                    rightElement={lockButton}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ password: e.target.value})}\r\n                />\r\n              </Label>\r\n              <Button large id=\"login-button\" onClick={this.handleAuthenticate} disabled={!this.SubmitPreventer()} className=\"bp3-fill\"> 로그인 </Button><br/>\r\n              <Link to=\"/register\">회원가입</Link><br />\r\n              <a href=\"/help\">아이디/비밀번호 찾기</a> \r\n          </div>\r\n          </FormGroup>\r\n        </section>\r\n      )\r\n    }\r\n    \r\n    handleAuthenticate = () => {\r\n      const f = new FormData()\r\n      f.append('username', this.state.username)\r\n      f.append('password', this.state.password)\r\n      AuthenticationService.authenticate(f).then(() => {\r\n        alert('로그인 성공')\r\n        history.push('/')\r\n      }).catch((error) => {\r\n        alert(error.message)\r\n      })\r\n    }\r\n\r\n    componentDidMount = () => {\r\n      eventBus.dispatch('headerFooter', { message: false })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n      eventBus.dispatch('headerFooter', { message: true })\r\n    }\r\n\r\n    SubmitPreventer = () => {\r\n      return this.state.username.length >= 2 && this.state.password.length >= 8\r\n    }\r\n\r\n    handleLockClick = () => this.setState({ showPassword: !this.state.showPassword })\r\n  }\r\n  \r\n  export default Login","\r\n//이메일형식\r\nexport const emailRegex = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i)\r\n\r\n//2~20자 영소대문자숫자아이디\r\nexport const usernameRegex = /^[a-z0-9_]{2,20}$/\r\n\r\n//최소 8 자, 대문자, 소문자 , 숫자 특수 문자 하나 이상\r\nexport const passwordRegex = new RegExp(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&]{8,}/)\r\n","import axios from 'axios'\nimport errorParser from '../utils/error-parser'\n\nexport default {\n  /**\n   * Register a new user\n   * @param {Object} detail registration detail\n   */\n  MemberRegister (detail) {\n    return new Promise((resolve, reject) => {\n      axios.post('/api/MemberRegister', detail).then(({ data }) => {\n        resolve(data)\n      }).catch((error) => {\n        reject(errorParser.parse(error))\n      })\n    })\n  },\n\n  productRegister (detail) {\n    return new Promise((resolve, reject) => {\n      axios.post('/api/ProductRegister', detail).then(({ data }) => {\n        resolve(data)\n      }).catch((error) => {\n        reject(errorParser.parse(error))\n      })\n    })\n  }\n}\n","import React from 'react'\r\nimport { Intent, InputGroup, FormGroup, Label, Button } from \"@blueprintjs/core\"\r\nimport { usernameRegex, emailRegex, passwordRegex } from '../utils/regex'\r\nimport eventBus from '../utils/eventBus'\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/form.scss'\r\nimport RegistrationService from '../services/RegistrationService'\r\nimport history from '../utils/history'\r\n\r\n\r\nexport default class MemberRegister extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            username: '',\r\n            isUsernameValid: 'no-val',\r\n            password: '',\r\n            isPasswordValid: 'no-val',\r\n            password2: '',\r\n            isPassword2Valid: 'no-val',\r\n            emailAddress: '',\r\n            isEmailAddressValid: 'no-val'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section id=\"member-register\">\r\n                <div id=\"logo\">\r\n                    <Link to=\"/\"><img src={require('../assets/logo_white_h.svg')} alt=\"Logo\"/></Link>\r\n                </div>\r\n                <FormGroup>\r\n                    <div className=\"bp3-card\">\r\n                        <h1>회원 가입</h1>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>아이디</strong>\r\n                            <InputGroup name=\"username\" placeholder=\"영대/소문자/숫자 2~20자\" intent={this.IntentParser(this.state.isUsernameValid)}\r\n                            onChange={e => this.setState({ username: e.target.value, isUsernameValid: usernameRegex.test(e.target.value) ? 'valid' : 'invalid' })} />\r\n                            <Label>\r\n                                <h5 className={`${this.state.isUsernameValid}`}>아이디는 영대/소문자 or 숫자 포함 2~20글자 입니다.</h5>\r\n                            </Label>\r\n                        </Label>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>이메일</strong>\r\n                            <InputGroup name=\"emailAddress\" placeholder=\"Email\" intent={this.IntentParser(this.state.isEmailAddressValid)}\r\n                            onChange={e => this.setState({ emailAddress: e.target.value, isEmailAddressValid: emailRegex.test(e.target.value) ? 'valid' : 'invalid' })} />\r\n                            <Label>\r\n                                <h5 className={`${this.state.isEmailAddressValid}`}>유효하지 않은 이메일 형식 입니다.</h5>\r\n                            </Label>\r\n                        </Label>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>비밀번호</strong>\r\n                            <InputGroup name=\"password\" placeholder=\"대/소문자 ,숫자 특수문자 하나 이상 포함 8자 이상\" type=\"password\"\r\n                            intent={this.IntentParser(this.state.isPasswordValid)}\r\n                            onChange={e => this.setState({ password: e.target.value, isPasswordValid: passwordRegex.test(e.target.value) ? 'valid' : 'invalid' })} />\r\n                            <Label>\r\n                                <h5 className={`${this.state.isPasswordValid}`}>비밀번호는 대/소문자/숫자/특수문자 포함 8자 이상입니다.</h5>\r\n                            </Label>\r\n                        </Label>\r\n\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>비밀번호 재입력</strong>\r\n                            <InputGroup name=\"password2\" placeholder=\"비밀번호 재입력\" type=\"password\" intent={this.IntentParser(this.state.isPassword2Valid)}\r\n                            onChange={e => this.setState({ password2: e.target.value, isPassword2Valid: this.state.password === e.target.value ? 'valid' : 'invalid' })} />\r\n                            <Label>\r\n                                <h5 className={`${this.state.isPassword2Valid}`}>비밀번호가 일치하지 않습니다.</h5>\r\n                            </Label>\r\n                        </Label>\r\n                        <Button large className=\"bp3-fill\" id=\"register-button\" onClick={this.handleRegister}disabled={!this.SubmitPreventer()}> 회원 가입 </Button>\r\n                    </div>\r\n                </FormGroup>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    IntentParser = state => {\r\n        switch(state){\r\n            case 'invalid':\r\n                return Intent.DANGER\r\n\r\n            case 'valid':\r\n                return Intent.SUCCESS\r\n\r\n            default:\r\n                return Intent.NONE\r\n        }\r\n    }\r\n\r\n    SubmitPreventer = () => {\r\n        return this.state.isUsernameValid ==='valid' &&\r\n        this.state.isPasswordValid ==='valid' &&\r\n        this.state.isPassword2Valid ==='valid'&&\r\n        this.state.isEmailAddressValid ==='valid'\r\n    }\r\n\r\n    componentDidMount = () => {\r\n    eventBus.dispatch('headerFooter', { message: false })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n    eventBus.dispatch('headerFooter', { message: true })\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const f = new FormData()\r\n        f.append('username', this.state.username)\r\n        f.append('password', this.state.password)\r\n        f.append('emailAddress', this.state.emailAddress)\r\n        RegistrationService.MemberRegister(f).then(() => {\r\n          alert('등록 성공')\r\n          history.push('/')\r\n        }).catch((error) => {\r\n            alert('등록 실패'+error.message)\r\n        })\r\n      }\r\n}","import React from 'react'\r\nimport '../css/footer.scss'\r\nimport eventBus from '../utils/eventBus'\r\n\r\nclass Footer extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      footerOn: true\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { footerOn } = this.state\r\n\r\n    return (\r\n      <footer>\r\n        <div id =\"footer\" className={footerOn ? 'headerfooter-on' : 'headerfooter-off'}>\r\n          <div id=\"back-to-top\">\r\n            <h5>Back to top</h5>\r\n          </div>\r\n          <div id=\"about\">\r\n            <a href=\"/\">\r\n              <img src={require('../assets/logo_dark_h.svg')} alt=\"Logo\" className=\"Logo\" />\r\n            </a>\r\n          </div>\r\n          <div id=\"sitemap\">\r\n            <h5>Something!</h5>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    eventBus.on('headerFooter', (data) => this.setState({ footerOn: data.message }))\r\n  }\r\n  \r\n\r\n\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Counter = ({number, onIncrease, onDecrease}) => {\r\n    return (\r\n        <div>\r\n            <h1>{number}</h1>\r\n            <div>\r\n                <button onClick={onIncrease}>+1</button>\r\n                <button onClick={onDecrease}>+1</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter","const INCREASE = 'counter/INCREASE'\r\nconst DECREASE = 'counter/DECREASE'\r\n\r\nexport const increase = () => ({ type: INCREASE})\r\nexport const decrease = () => ({ type: DECREASE})\r\n\r\nconst initialState = {\r\n    number: 0\r\n}\r\n\r\nfunction counter(state = initialState, action) {\r\n    switch(action.type){\r\n        case INCREASE:\r\n            return{\r\n                number: state.number+1\r\n            }\r\n        case DECREASE:\r\n            return{\r\n                number: state.number-1\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default counter","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Counter from '../test/Counter'\r\nimport {increase, decrease} from '../modules/counter'\r\n\r\nconst CounterContainer = ({number, increase, decrease}) => {\r\n    return (\r\n    <Counter number={number} onIncrease={increase} onDecrease = {decrease} />\r\n    )\r\n}\r\n\r\nconst mapStatetoProps = state => ({\r\n    number: state.counter.number\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    increase: () => {\r\n        dispatch(increase())\r\n    },\r\n    decrease: () =>{\r\n        dispatch(decrease())\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStatetoProps,\r\n    mapDispatchToProps,\r\n)(CounterContainer)","import React from 'react'\r\n\r\nconst TodoItem = ({todo, onToggle, onRemove}) => {\r\n    return(\r\n        <div>\r\n            <input\r\n            type=\"checkbox\"\r\n            onClick={() => onToggle(todo.id)}\r\n            checked={todo.done}\r\n            readOnly = {true}\r\n            />\r\n            <span style={{textDecoration: todo.done ? 'line-through' : 'none'}}> {todo.text} </span>\r\n            <button onClick={() => onRemove(todo.id)}>삭제</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Todos = ({\r\n    input,\r\n    todos,\r\n    onChangeInput,\r\n    onInsert,\r\n    onToggle,\r\n    onRemove\r\n}) => {\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        onInsert(input)\r\n        onChangeInput('')\r\n    }\r\n    const onChange = e => onChangeInput(e.target.value)\r\n    return (\r\n        <div>\r\n            <form onSubmit={onSubmit}>\r\n                <input value={input} onChange={onChange} />\r\n                <button type=\"submit\">등록</button>\r\n            </form>\r\n            <div>\r\n                {todos.map(todo => (\r\n                    <TodoItem\r\n                        todo={todo}\r\n                        key ={todo.id}\r\n                        onToggle ={onToggle}\r\n                        onRemove = {onRemove}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Todos","const CHANGE_INPUT = 'todos/CHANGE_INPUT'\r\nconst INSERT = 'todos/INSERT'\r\nconst TOGGLE = 'todos/TOGGLE'\r\nconst REMOVE = 'todos/REMOVE'\r\n\r\nexport const changeInput = input => ({\r\n    type: CHANGE_INPUT,\r\n    input\r\n})\r\n\r\nlet id = 3\r\nexport const insert = text => ({\r\n    type: INSERT,\r\n    todo: {\r\n        id: id++,\r\n        text,\r\n        done: false\r\n    }\r\n})\r\n\r\nexport const toggle = id => ({\r\n    type: TOGGLE,\r\n    id\r\n})\r\n\r\nexport const remove = id => ({\r\n    type: REMOVE,\r\n    id\r\n})\r\n\r\nconst initialState ={\r\n    input: '',\r\n    todos: [\r\n        {\r\n            id:1,\r\n            text: '리덕스 기초 배우기',\r\n            done: true\r\n        },\r\n        {\r\n            id:2,\r\n            text: '리액트와 리덕스 사용하기',\r\n            done: false\r\n        }\r\n    ]\r\n}\r\n\r\nfunction todos(state = initialState, action){\r\n    switch(action.type) {\r\n        case CHANGE_INPUT:\r\n            return {\r\n                ...state,\r\n                input: action.input\r\n            }\r\n        case INSERT:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.concat(action.todo)\r\n            }\r\n        case TOGGLE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.map(todo =>\r\n                    todo.id === action.id ? {...todo, done: !todo.done} : todo\r\n                )\r\n            }\r\n        case REMOVE:\r\n            return {\r\n                ...state,\r\n                todos: state.todos.filter(todo => todo.id !== action.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todos","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport Todos from '../test/Todos'\r\nimport {changeInput, insert, toggle, remove} from '../modules/todos'\r\n\r\nconst TodosContainer = ({\r\n    input,\r\n    todos,\r\n    changeInput,\r\n    insert,\r\n    toggle,\r\n    remove\r\n}) => {\r\n    return(\r\n        <Todos\r\n            input={input}\r\n            todos={todos}\r\n            onChangeInput={changeInput}\r\n            onInsert = {insert}\r\n            onToggle = {toggle}\r\n            onRemove = {remove}\r\n            />\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    ({todos}) => ({\r\n        input: todos.input,\r\n        todos: todos.todos\r\n    }),\r\n    {\r\n        changeInput,\r\n        insert,\r\n        toggle,\r\n        remove\r\n    },\r\n)(TodosContainer)","import React from 'react'\r\nimport CounterContainer from '../containers/CounterContainer'\r\nimport TodosContainer from '../containers/TodosContainer'\r\n\r\nconst style = {\r\n    width: '500px',\r\n    height: '50%',\r\n    textAlign: 'left',\r\n    margin: '5px auto',\r\n    padding: '30px'\r\n}\r\n\r\nconst IntroRedux = () => {\r\n    return (\r\n      <div style={style}>\r\n        <CounterContainer />\r\n        <hr />\r\n        <TodosContainer />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default IntroRedux\r\n","import React from 'react'\r\nimport { HTMLSelect, InputGroup, FormGroup, Label, Button, FileInput} from \"@blueprintjs/core\"\r\nimport { Link } from 'react-router-dom'\r\nimport '../css/form.scss'\r\nimport RegistrationService from '../services/RegistrationService'\r\nimport history from '../utils/history'\r\n\r\n\r\nexport default class MemberRegister extends React.Component {\r\n\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            productName: '',\r\n            thumbImage: '',\r\n            thumbUrl: 'noUrl',\r\n            username: 'null (로딩 실패)',\r\n            stock: '',\r\n            price: '',\r\n            category: ''\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n      const {productName, thumbImage, thumbUrl, username, stock, price, category} = this.state\r\n      \r\n        return (\r\n            <section id=\"product-register\">\r\n                <div id=\"logo\">\r\n                    <Link to=\"/\"><img src={require('../assets/logo_white_h.svg')} alt=\"Logo\"/></Link>\r\n                </div>\r\n                <FormGroup>\r\n                    <div className=\"bp3-card\">\r\n                        <h1>상품 등록(임시)</h1>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>상품명</strong>\r\n                            <InputGroup name=\"username\" placeholder=\"상품명\" onChange={e => this.setState({ productName: e.target.value })} />\r\n                        </Label>\r\n                            <FileInput text=\"썸네일\" onChange={this.onChangeImages} />\r\n                            <div id=\"image-wrapper\">\r\n                            <img src={thumbUrl} alt=\"미리보기\" className={thumbUrl==='noUrl'? 'no-val': 'invalid'}/>\r\n                            </div>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>판매자: {username}</strong>\r\n                        </Label>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>재고량</strong>\r\n                            <InputGroup name=\"username\" placeholder=\"재고량\" onChange={e => this.setState({ stock: e.target.value })} />\r\n                        </Label>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>가격</strong>\r\n                            <InputGroup name=\"username\" placeholder=\"가격\" onChange={e => this.setState({ price: e.target.value })}/>\r\n                        </Label>\r\n                        <Label className=\"input-wrapper\">\r\n                            <strong>카테고리</strong>\r\n                            <HTMLSelect value={this.state.category} onChange={e => this.setState({ category: e.target.value })}>\r\n                              <option defaultValue>카테고리를 선택하세요</option>\r\n                              <option value=\"의류\">의류</option>\r\n                              <option value=\"가전\">가전</option>\r\n                              <option value=\"전자기기\">전자기기</option>\r\n                              <option value=\"식품\">식품</option>\r\n                            </HTMLSelect>\r\n                        </Label>\r\n                        <h2>데이터 검증</h2>\r\n                        productName: {productName} <br/>\r\n                        thumbImage: {thumbImage.name}<br/>\r\n                        username: {username}<br/>\r\n                        stock: {stock}<br/>\r\n                        price: {price}<br/>\r\n                        category: {category}<br/>\r\n                        \r\n                        <Button large className=\"bp3-fill\" id=\"register-button\"> 상품 등록 </Button>\r\n                    </div>\r\n                </FormGroup>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    onChangeImages = (e) => {\r\n        const file = e.target.files[0]\r\n        this.setState({thumbImage: file})\r\n        this.setState({thumbUrl: URL.createObjectURL(file)})\r\n        const fm = new FormData()\r\n        fm.append('image', file)\r\n      }\r\n\r\n    SubmitPreventer = () => {\r\n        return this.state.isUsernameValid ==='valid' &&\r\n        this.state.isPasswordValid ==='valid' &&\r\n        this.state.isPassword2Valid ==='valid'&&\r\n        this.state.isEmailAddressValid ==='valid'\r\n    }\r\n\r\n    handleRegister = () => {\r\n        const f = new FormData()\r\n        f.append('productName', this.state.productName)\r\n        f.append('thumbImage', this.state.thumbImage.name)\r\n        f.append('stock', this.state.stock)\r\n        f.append('price', this.state.price)\r\n        f.append('category', this.state.category)\r\n        f.append('username', this.state.username)\r\n        RegistrationService.productRegister(f).then(() => {\r\n          alert('등록 성공')\r\n          history.push('/')\r\n        }).catch((error) => {\r\n          alert('등록 실패'+error.message)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport Header from './comp/Header'\r\nimport Login from './views/Login'\r\nimport MemberRegister from './views/MemberRegister'\r\nimport Footer from './comp/Footer'\r\nimport IntroRedux from './test/IntroRedux'\r\nimport Main from './views/Main'\r\nimport './App.css'\r\nimport { Route } from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div id=\"app\">\r\n      <Header />\r\n      <Route path=\"/login\" component={Login} exact={true} />\r\n      <Route path=\"/register\" component={MemberRegister} exact={true} />\r\n      <Route path=\"/test\" component={IntroRedux} exact={true} />\r\n      <Route path=\"/\" component={Main} exact={true} />\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nconst HEADER = 'Header/HEADER'\r\nconst FOOTER = 'Footer/FOOTER'\r\n\r\n\r\nexport const header = () => ({ type: HEADER })\r\nexport const footer = () => ({ type: FOOTER })\r\n\r\n\r\n\r\nconst initialState = {\r\n    header: true,\r\n    footer: true\r\n}\r\n\r\nfunction headerFooter(state = initialState, action) {\r\n    switch(action.type){\r\n        case HEADER:\r\n            return{\r\n                header: !header\r\n            }\r\n        case FOOTER:\r\n            return{\r\n                footer: !footer\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default headerFooter","import { combineReducers } from 'redux'\r\nimport HeaderFooter from './header-footer'\r\n\r\nconst rootReducer = combineReducers({\r\n    HeaderFooter\r\n})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { composeWithDevTools} from 'redux-devtools-extension'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport rootReducer from './modules';\r\nimport 'normalize.css/normalize.css';\r\nimport '@blueprintjs/core/lib/css/blueprint.css';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools())\r\n\r\nReactDOM.render(\r\n    <Provider store = {store}>\r\n      <BrowserRouter>\r\n       <App />\r\n       </BrowserRouter>\r\n    </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo_white_h.7320fae5.svg\";"],"sourceRoot":""}